plugins {
    id 'com.moowork.node' version '1.1.1'
}

group 'ca.concordia'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile "com.sparkjava:spark-core:2.5.4"
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'mysql:mysql-connector-java:5.1.16'
}

node {
    version = '7.7.4'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.projectDir}/src/main/resources/ui")
}

sourceSets {
    main {
        resources {
            exclude '/ui/src'
            exclude '/ui/node_modules'
        }
    }
}

task launchServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'ca.concordia.pivottable.Application'
}

task fatJar(type: Jar) {
    manifest {
        attributes(
                //'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                //'Class-Path': sourceSets.main.runtimeClasspath,
                'Main-Class': 'ca.concordia.pivottable.Application'
        )
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar

}

task appNpmInstall(type: NpmTask) {
    description = 'Installs dependencies from package.json'
    workingDir = file("${project.projectDir}/src/main/resources/ui")
    args = ['install']
}

task appNpmRunBuild(type: NpmTask) {
    description = 'Builds the UI code'
    workingDir = file("${project.projectDir}/src/main/resources/ui")
    args = ['run', 'build']
}
